/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { create1 } from '../fn/offer-form-controller/create-1';
import { Create1$Params } from '../fn/offer-form-controller/create-1';
import { get } from '../fn/offer-form-controller/get';
import { Get$Params } from '../fn/offer-form-controller/get';
import { OfferFormResponse } from '../models/offer-form-response';

@Injectable({ providedIn: 'root' })
export class OfferFormControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `create1()` */
  static readonly Create1Path = '/api/v1/offer_forms/create';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `create1()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  create1$Response(params: Create1$Params, context?: HttpContext): Observable<StrictHttpResponse<OfferFormResponse>> {
    return create1(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `create1$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  create1(params: Create1$Params, context?: HttpContext): Observable<OfferFormResponse> {
    return this.create1$Response(params, context).pipe(
      map((r: StrictHttpResponse<OfferFormResponse>): OfferFormResponse => r.body)
    );
  }

  /** Path part for operation `get()` */
  static readonly GetPath = '/api/v1/offer_forms/{formId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `get()` instead.
   *
   * This method doesn't expect any request body.
   */
  get$Response(params: Get$Params, context?: HttpContext): Observable<StrictHttpResponse<OfferFormResponse>> {
    return get(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `get$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  get(params: Get$Params, context?: HttpContext): Observable<OfferFormResponse> {
    return this.get$Response(params, context).pipe(
      map((r: StrictHttpResponse<OfferFormResponse>): OfferFormResponse => r.body)
    );
  }

}
